#include <avr/pgmspace.h>

// Define the structure for sensor data
struct SensorData {
    int day;
    int interval;
    int temperature;
    int moisture;
    int humidity;
    int n;
    int p;
    int k;
};

// Example dataset stored in PROGMEM to save SRAM
const SensorData sensorData[] PROGMEM = {
    {0, 0, 21, 56, 55, 54, 51, 265},
    {0, 1, 30, 51, 65, 65, 50, 264},
    {0, 2, 22, 45, 69, 53, 52, 205},
    {0, 3, 23, 48, 68, 72, 47, 223},
    {0, 4, 27, 58, 55, 91, 41, 275},
    {0, 5, 30, 52, 62, 81, 60, 268},
    {1, 0, 24, 55, 63, 95, 53, 300},
    {1, 1, 26, 60, 63, 94, 48, 201},
    {1, 2, 25, 40, 62, 85, 56, 222},
    {1, 3, 27, 51, 54, 91, 45, 256},
    {1, 4, 29, 50, 68, 52, 54, 257},
    {1, 5, 21, 52, 64, 79, 42, 217},
    {2, 0, 30, 54, 58, 81, 44, 239},
    {2, 1, 26, 54, 65, 77, 58, 225},
    {2, 2, 27, 46, 66, 69, 57, 226},
    {2, 3, 21, 46, 60, 63, 47, 230},
    {2, 4, 25, 42, 66, 78, 40, 243},
    {2, 5, 28, 42, 69, 92, 45, 267},
    {3, 0, 28, 60, 53, 67, 48, 229},
    {3, 1, 29, 49, 57, 73, 42, 260},
    {3, 2, 30, 57, 59, 88, 53, 241},
    {3, 3, 26, 49, 66, 51, 42, 247},
    {3, 4, 20, 41, 59, 91, 58, 274},
    {3, 5, 29, 59, 56, 52, 60, 280},
    {4, 0, 21, 46, 65, 95, 47, 206},
    {4, 1, 27, 47, 69, 55, 48, 285},
    {4, 2, 29, 41, 59, 57, 53, 266},
    {4, 3, 30, 41, 58, 87, 40, 235},
    {4, 4, 20, 50, 70, 70, 46, 203},
    {4, 5, 20, 42, 59, 64, 59, 205},
    {5, 0, 28, 48, 53, 77, 58, 256},
    {5, 1, 24, 59, 60, 91, 57, 292},
    {5, 2, 29, 57, 68, 69, 43, 270},
    {5, 3, 28, 54, 58, 93, 49, 268},
    {5, 4, 21, 54, 51, 89, 57, 280},
    {5, 5, 27, 50, 54, 82, 55, 239},
    {6, 0, 24, 55, 58, 100, 48, 229},
    {6, 1, 27, 46, 60, 94, 56, 297},
    {6, 2, 29, 48, 56, 73, 45, 244},
    {6, 3, 26, 40, 52, 82, 52, 201},
    {6, 4, 25, 47, 60, 82, 45, 256},
    {6, 5, 26, 44, 53, 70, 58, 283},
    {7, 0, 26, 40, 50, 97, 54, 299},
    {7, 1, 30, 52, 54, 77, 55, 292},
    {7, 2, 21, 50, 51, 72, 52, 228},
    {7, 3, 20, 42, 66, 58, 57, 222},
    {7, 4, 24, 55, 70, 76, 44, 288},
    {7, 5, 25, 48, 66, 69, 44, 245},
    {8, 0, 22, 59, 59, 91, 44, 257},
    {8, 1, 24, 56, 57, 94, 53, 207},
    {8, 2, 26, 54, 53, 54, 49, 207},
    {8, 3, 20, 52, 60, 77, 52, 218},
    {8, 4, 30, 51, 61, 51, 50, 275},
    {8, 5, 21, 53, 60, 80, 49, 201},
    {9, 0, 20, 47, 70, 69, 59, 283},
    {9, 1, 25, 48, 59, 52, 50, 250},
    {9, 2, 20, 47, 62, 95, 45, 232},
    {9, 3, 20, 53, 57, 92, 47, 266},
    {9, 4, 20, 50, 54, 83, 50, 207},
    {9, 5, 21, 57, 67, 85, 47, 290},
    {10, 0, 26, 46, 68, 58, 44, 270},
    {10, 1, 28, 58, 53, 87, 44, 250},
    {10, 2, 23, 53, 53, 66, 54, 265},
    {10, 3, 27, 51, 64, 91, 50, 264},
    {10, 4, 27, 40, 62, 89, 48, 226},
    {10, 5, 27, 51, 55, 82, 56, 260},
    {11, 0, 20, 46, 63, 62, 41, 202},
    {11, 1, 21, 49, 65, 67, 42, 281},
    {11, 2, 26, 40, 69, 86, 54, 203},
    {11, 3, 26, 59, 67, 97, 53, 282},
    {11, 4, 22, 44, 61, 80, 41, 263},
    {11, 5, 23, 46, 51, 95, 44, 227},
    {12, 0, 23, 54, 57, 83, 55, 267},
    {12, 1, 29, 57, 52, 66, 51, 288},
    {12, 2, 22, 41, 70, 81, 46, 209},
    {12, 3, 28, 50, 65, 66, 53, 235},
    {12, 4, 25, 46, 58, 95, 50, 300},
    {12, 5, 23, 48, 63, 80, 49, 226},
    {13, 0, 27, 56, 59, 80, 48, 212},
    {13, 1, 25, 41, 51, 62, 45, 210},
    {13, 2, 20, 47, 65, 50, 41, 220},
    {13, 3, 28, 43, 57, 80, 45, 271},
    {13, 4, 23, 60, 69, 92, 55, 237},
    {13, 5, 24, 41, 55, 74, 53, 280},
    {14, 0, 28, 42, 54, 130, 53, 340},
    {14, 1, 29, 42, 59, 118, 60, 263},
    {14, 2, 30, 49, 42, 126, 77, 329},
    {14, 3, 32, 42, 45, 139, 59, 319},
    {14, 4, 33, 38, 59, 129, 57, 264},
    {14, 5, 30, 47, 57, 114, 70, 303},
    {15, 0, 34, 39, 41, 118, 68, 259},
    {15, 1, 33, 38, 44, 139, 54, 281},
    {15, 2, 29, 34, 40, 148, 54, 270},
    {15, 3, 30, 30, 44, 141, 61, 299},
    {15, 4, 27, 40, 55, 121, 75, 332},
    {15, 5, 28, 39, 54, 115, 69, 256},
    {16, 0, 30, 38, 47, 125, 58, 347},
    {16, 1, 26, 43, 55, 113, 56, 255},
    {16, 2, 29, 32, 49, 145, 73, 338},
    {16, 3, 34, 43, 49, 148, 57, 262},
    {16, 4, 35, 41, 54, 109, 69, 283},
    {16, 5, 29, 47, 46, 114, 71, 328},
    {17, 0, 27, 41, 51, 125, 68, 273},
    {17, 1, 30, 44, 55, 109, 56, 341},
    {17, 2, 31, 37, 56, 126, 77, 261},
    {17, 3, 28, 32, 58, 147, 76, 314},
    {17, 4, 27, 40, 55, 139, 63, 287},
    {17, 5, 25, 38, 42, 131, 63, 292},
    {18, 0, 28, 34, 54, 115, 59, 350},
    {18, 1, 31, 40, 54, 127, 58, 326},
    {18, 2, 25, 35, 46, 117, 76, 266},
    {18, 3, 31, 37, 59, 147, 68, 253},
    {18, 4, 35, 45, 43, 121, 64, 261},
    {18, 5, 34, 40, 41, 139, 64, 281},
    {19, 0, 28, 33, 43, 125, 54, 325},
    {19, 1, 25, 49, 41, 112, 67, 308},
    {19, 2, 27, 48, 54, 119, 74, 299},
    {19, 3, 33, 39, 55, 132, 51, 298},
    {19, 4, 34, 48, 49, 123, 55, 297},
    {19, 5, 26, 33, 50, 134, 51, 298},
    {20, 0, 26, 34, 58, 113, 56, 255},
    {20, 1, 30, 48, 43, 118, 77, 344},
    {20, 2, 30, 32, 47, 125, 70, 264},
    {20, 3, 35, 43, 47, 118, 53, 282},
    {20, 4, 26, 47, 52, 138, 60, 345},
    {20, 5, 35, 48, 40, 114, 61, 343},
    {21, 0, 30, 35, 40, 126, 56, 325},
    {21, 1, 32, 31, 52, 108, 66, 298},
    {21, 2, 35, 38, 42, 115, 75, 295},
    {21, 3, 29, 38, 55, 129, 66, 281},
    {21, 4, 25, 43, 51, 137, 79, 345},
    {21, 5, 35, 37, 49, 100, 75, 320},
    {22, 0, 31, 50, 57, 137, 52, 262},
    {22, 1, 27, 38, 54, 101, 56, 348},
    {22, 2, 27, 34, 49, 101, 74, 281},
    {22, 3, 32, 40, 45, 147, 67, 276},
    {22, 4, 33, 30, 49, 119, 73, 341},
    {22, 5, 32, 43, 40, 127, 68, 350},
    {23, 0, 28, 36, 42, 105, 75, 312},
    {23, 1, 29, 41, 41, 122, 63, 266},
    {23, 2, 27, 37, 44, 100, 80, 288},
    {23, 3, 25, 43, 52, 118, 65, 267},
    {23, 4, 28, 43, 48, 146, 76, 304},
    {23, 5, 31, 50, 55, 133, 76, 289},
    {24, 0, 32, 46, 49, 148, 57, 270},
    {24, 1, 31, 50, 59, 133, 52, 283},
    {24, 2, 32, 31, 45, 114, 62, 264},
    {24, 3, 26, 38, 40, 148, 68, 313},
    {24, 4, 27, 46, 53, 128, 65, 305},
    {24, 5, 27, 39, 59, 133, 75, 327},
    {25, 0, 28, 44, 57, 144, 76, 265},
    {25, 1, 25, 43, 48, 148, 79, 285},
    {25, 2, 29, 34, 50, 129, 50, 322},
    {25, 3, 33, 45, 59, 140, 73, 318},
    {25, 4, 25, 46, 58, 129, 75, 317},
    {25, 5, 26, 38, 52, 111, 57, 256},
    {26, 0, 29, 48, 54, 141, 56, 331},
    {26, 1, 32, 35, 58, 142, 79, 258},
    {26, 2, 25, 37, 40, 116, 54, 302},
    {26, 3, 32, 30, 53, 132, 57, 306},
    {26, 4, 28, 45, 60, 113, 55, 350},
    {26, 5, 30, 47, 50, 143, 56, 259},
    {27, 0, 26, 39, 57, 115, 70, 327},
    {27, 1, 35, 33, 55, 110, 72, 326},
    {27, 2, 29, 48, 48, 146, 51, 282},
    {27, 3, 25, 41, 52, 120, 54, 287},
    {27, 4, 31, 31, 40, 114, 65, 304},
    {27, 5, 33, 46, 46, 114, 72, 262},
    {28, 0, 34, 45, 57, 138, 73, 335},
    {28, 1, 26, 38, 50, 106, 62, 336},
    {28, 2, 33, 50, 42, 150, 64, 341},
    {28, 3, 31, 31, 51, 113, 64, 327},
    {28, 4, 28, 33, 40, 106, 80, 341},
    {28, 5, 28, 47, 53, 115, 70, 261},
    {29, 0, 33, 30, 51, 117, 58, 292},
    {29, 1, 33, 34, 49, 118, 63, 338},
    {29, 2, 29, 43, 44, 121, 53, 280},
    {29, 3, 27, 49, 60, 110, 77, 297},
    {29, 4, 28, 32, 59, 150, 50, 347},
    {29, 5, 32, 38, 54, 121, 58, 260},
    {30, 0, 26, 36, 53, 117, 82, 339},
    {30, 1, 33, 26, 42, 103, 60, 339},
    {30, 2, 25, 34, 50, 140, 61, 393},
    {30, 3, 31, 36, 46, 111, 65, 377},
    {30, 4, 34, 40, 49, 136, 69, 389},
    {30, 5, 33, 37, 46, 112, 60, 384},
    {31, 0, 27, 31, 58, 112, 64, 366},
    {31, 1, 25, 30, 48, 120, 72, 317},
    {31, 2, 28, 42, 51, 122, 61, 346},
    {31, 3, 29, 35, 54, 118, 78, 290},
    {31, 4, 25, 39, 47, 116, 71, 349},
    {31, 5, 34, 36, 45, 113, 84, 350},
    {32, 0, 31, 35, 46, 133, 61, 256},
    {32, 1, 33, 25, 52, 132, 76, 368},
    {32, 2, 29, 42, 44, 149, 61, 334},
    {32, 3, 29, 25, 51, 128, 87, 302},
    {32, 4, 31, 30, 41, 107, 62, 399},
    {32, 5, 31, 25, 44, 144, 72, 355},
    {33, 0, 31, 41, 60, 107, 82, 302},
    {33, 1, 32, 37, 41, 129, 71, 269},
    {33, 2, 26, 32, 44, 148, 90, 299},
    {33, 3, 27, 44, 43, 141, 72, 332},
    {33, 4, 30, 45, 54, 109, 61, 295},
    {33, 5, 26, 40, 42, 123, 67, 373},
    {34, 0, 33, 25, 55, 138, 61, 304},
    {34, 1, 32, 40, 45, 113, 81, 356},
    {34, 2, 27, 39, 48, 147, 88, 397},
    {34, 3, 34, 36, 59, 103, 67, 327},
    {34, 4, 30, 29, 41, 121, 66, 268},
    {34, 5, 34, 42, 58, 111, 90, 382},
    {35, 0, 25, 38, 44, 108, 70, 386},
    {35, 1, 25, 29, 46, 114, 62, 253},
    {35, 2, 35, 27, 42, 124, 60, 294},
    {35, 3, 26, 45, 59, 116, 87, 289},
    {35, 4, 33, 32, 56, 130, 60, 265},
    {35, 5, 33, 34, 49, 108, 86, 371},
    {36, 0, 34, 29, 49, 107, 62, 395},
    {36, 1, 35, 42, 58, 131, 63, 264},
    {36, 2, 31, 39, 51, 102, 84, 284},
    {36, 3, 25, 34, 42, 140, 71, 307},
    {36, 4, 29, 34, 60, 114, 88, 271},
    {36, 5, 25, 36, 40, 145, 63, 351},
    {37, 0, 30, 26, 50, 144, 62, 336},
    {37, 1, 28, 41, 46, 102, 88, 371},
    {37, 2, 31, 30, 49, 141, 78, 289},
    {37, 3, 25, 36, 50, 117, 72, 335},
    {37, 4, 34, 29, 54, 107, 86, 313},
    {37, 5, 34, 40, 43, 148, 65, 329},
    {38, 0, 30, 36, 47, 121, 77, 391},
    {38, 1, 34, 28, 55, 103, 81, 259},
    {38, 2, 35, 36, 53, 140, 66, 281},
    {38, 3, 30, 32, 45, 123, 80, 384},
    {38, 4, 27, 43, 43, 110, 76, 386},
    {38, 5, 35, 31, 42, 131, 64, 329},
    {39, 0, 28, 35, 59, 104, 80, 333},
    {39, 1, 26, 28, 58, 147, 65, 334},
    {39, 2, 34, 39, 46, 112, 90, 323},
    {39, 3, 27, 38, 55, 130, 61, 309},
    {39, 4, 34, 43, 53, 146, 62, 253},
    {39, 5, 35, 29, 52, 119, 80, 360},
    {40, 0, 28, 25, 47, 122, 69, 304},
    {40, 1, 25, 33, 55, 107, 72, 290},
    {40, 2, 26, 25, 52, 117, 62, 303},
    {40, 3, 30, 37, 50, 125, 80, 258},
    {40, 4, 33, 42, 55, 107, 67, 280},
    {40, 5, 29, 27, 55, 110, 70, 298},
    {41, 0, 28, 45, 50, 103, 75, 341},
    {41, 1, 35, 26, 44, 103, 67, 351},
    {41, 2, 29, 45, 54, 103, 90, 290},
    {41, 3, 33, 30, 60, 122, 86, 285},
    {41, 4, 27, 43, 40, 104, 60, 386},
    {41, 5, 33, 32, 58, 124, 78, 313},
    {42, 0, 35, 35, 45, 110, 60, 387},
    {42, 1, 33, 44, 44, 148, 74, 384},
    {42, 2, 31, 42, 40, 109, 76, 341},
    {42, 3, 32, 35, 57, 125, 65, 258},
    {42, 4, 30, 29, 52, 138, 80, 291},
    {42, 5, 27, 32, 60, 118, 87, 358},
    {43, 0, 31, 43, 49, 148, 61, 390},
    {43, 1, 31, 44, 60, 148, 79, 340},
    {43, 2, 30, 31, 41, 115, 69, 286},
    {43, 3, 26, 26, 43, 141, 74, 385},
    {43, 4, 28, 36, 49, 115, 70, 328},
    {43, 5, 25, 43, 46, 116, 72, 351},
    {44, 0, 31, 34, 48, 140, 73, 313},
    {44, 1, 29, 45, 43, 101, 60, 278},
    {44, 2, 31, 40, 50, 129, 70, 283},
    {44, 3, 33, 39, 46, 100, 76, 305},
    {44, 4, 30, 43, 47, 128, 78, 305},
    {44, 5, 31, 37, 60, 133, 76, 251},
    {45, 0, 27, 26, 46, 87, 62, 257},
    {45, 1, 35, 45, 45, 115, 67, 265},
    {45, 2, 29, 44, 50, 122, 95, 359},
    {45, 3, 31, 26, 59, 140, 85, 208},
    {45, 4, 25, 33, 44, 103, 86, 214},
    {45, 5, 28, 28, 56, 91, 80, 242},
    {46, 0, 35, 33, 47, 147, 91, 380},
    {46, 1, 27, 27, 57, 58, 67, 301},
    {46, 2, 25, 26, 57, 102, 83, 228},
    {46, 3, 30, 30, 45, 107, 58, 226},
    {46, 4, 28, 40, 59, 76, 56, 275},
    {46, 5, 29, 45, 56, 115, 90, 208},
    {47, 0, 27, 27, 56, 128, 78, 340},
    {47, 1, 28, 30, 50, 65, 99, 294},
    {47, 2, 27, 25, 57, 118, 86, 214},
    {47, 3, 25, 30, 51, 61, 66, 321},
    {47, 4, 28, 27, 53, 83, 86, 324},
    {47, 5, 25, 43, 57, 70, 54, 333},
    {48, 0, 27, 26, 53, 74, 89, 378},
    {48, 1, 27, 42, 51, 137, 83, 245},
    {48, 2, 30, 39, 49, 56, 68, 307},
    {48, 3, 32, 37, 57, 95, 52, 230},
    {48, 4, 32, 39, 41, 129, 94, 367},
    {48, 5, 29, 32, 41, 68, 53, 233},
    {49, 0, 32, 45, 59, 108, 65, 333},
    {49, 1, 33, 39, 60, 87, 58, 230},
    {49, 2, 26, 30, 50, 116, 55, 299},
    {49, 3, 26, 31, 57, 127, 97, 306},
    {49, 4, 31, 35, 46, 103, 65, 274},
    {49, 5, 29, 40, 54, 60, 97, 262},
    {50, 0, 27, 36, 54, 82, 69, 373},
    {50, 1, 28, 38, 42, 66, 100, 397},
    {50, 2, 29, 30, 56, 125, 75, 263},
    {50, 3, 30, 25, 41, 145, 57, 280},
    {50, 4, 27, 44, 53, 60, 69, 200},
    {50, 5, 32, 41, 44, 78, 79, 313},
    {51, 0, 30, 28, 58, 78, 96, 231},
    {51, 1, 27, 35, 41, 94, 81, 380},
    {51, 2, 33, 45, 57, 120, 52, 390},
    {51, 3, 30, 45, 46, 92, 85, 288},
    {51, 4, 33, 45, 40, 145, 87, 376},
    {51, 5, 30, 32, 58, 66, 90, 238},
    {52, 0, 29, 30, 49, 106, 80, 204},
    {52, 1, 28, 31, 43, 121, 77, 206},
    {52, 2, 28, 28, 50, 73, 51, 327},
    {52, 3, 33, 31, 41, 58, 77, 258},
    {52, 4, 33, 37, 44, 130, 87, 248},
    {52, 5, 27, 25, 52, 101, 100, 384},
    {53, 0, 33, 27, 48, 107, 98, 278},
    {53, 1, 25, 31, 55, 118, 60, 363},
    {53, 2, 34, 43, 54, 140, 71, 387},
    {53, 3, 27, 32, 45, 74, 57, 370},
    {53, 4, 25, 35, 55, 73, 72, 220},
    {53, 5, 27, 31, 40, 131, 67, 295},
    {54, 0, 31, 31, 58, 62, 74, 268},
    {54, 1, 35, 26, 42, 139, 67, 278},
    {54, 2, 30, 37, 42, 126, 85, 388},
    {54, 3, 33, 35, 40, 83, 62, 334},
    {54, 4, 29, 42, 53, 135, 74, 337},
    {54, 5, 32, 40, 40, 59, 51, 211},
    {55, 0, 25, 32, 57, 51, 88, 279},
    {55, 1, 35, 43, 54, 87, 100, 377},
    {55, 2, 34, 45, 40, 62, 91, 308},
    {55, 3, 30, 29, 53, 77, 53, 394},
    {55, 4, 34, 31, 44, 106, 74, 308},
    {55, 5, 35, 37, 42, 63, 94, 256},
    {56, 0, 31, 37, 43, 113, 78, 245},
    {56, 1, 26, 36, 56, 120, 60, 250},
    {56, 2, 33, 26, 49, 133, 64, 204},
    {56, 3, 25, 38, 50, 147, 86, 373},
    {56, 4, 31, 31, 46, 74, 62, 231},
    {56, 5, 26, 40, 50, 63, 52, 274},
    {57, 0, 25, 41, 59, 129, 60, 350},
    {57, 1, 28, 37, 53, 74, 93, 242},
    {57, 2, 29, 33, 49, 52, 59, 257},
    {57, 3, 27, 27, 50, 50, 70, 377},
    {57, 4, 32, 36, 46, 81, 66, 263},
    {57, 5, 30, 33, 55, 89, 63, 271},
    {58, 0, 26, 25, 56, 98, 53, 234},
    {58, 1, 28, 27, 60, 149, 54, 356},
    {58, 2, 28, 36, 59, 90, 96, 203},
    {58, 3, 31, 37, 54, 110, 50, 322},
    {58, 4, 34, 33, 48, 129, 77, 318},
    {58, 5, 32, 34, 56, 126, 78, 272},
    {59, 0, 30, 40, 43, 141, 69, 342},
    {59, 1, 32, 37, 60, 135, 97, 273},
    {59, 2, 28, 30, 42, 86, 70, 317},
    {59, 3, 35, 38, 41, 123, 100, 392},
    {59, 4, 28, 33, 43, 149, 73, 276},
    {59, 5, 28, 43, 49, 112, 51, 321},
    {60, 0, 28, 42, 49, 143, 68, 378},
    {60, 1, 34, 43, 58, 123, 98, 211},
    {60, 2, 28, 35, 60, 116, 78, 339},
    {60, 3, 29, 27, 54, 92, 86, 310},
    {60, 4, 32, 39, 58, 101, 55, 273},
    {60, 5, 25, 36, 47, 119, 97, 313},
    {61, 0, 30, 34, 57, 145, 58, 306},
    {61, 1, 25, 44, 53, 126, 75, 292},
    {61, 2, 32, 35, 54, 143, 86, 292},
    {61, 3, 28, 40, 58, 96, 88, 213},
    {61, 4, 30, 35, 43, 105, 83, 337},
    {61, 5, 33, 30, 44, 119, 71, 278},
    {62, 0, 28, 39, 42, 112, 80, 204},
    {62, 1, 30, 31, 58, 120, 85, 241},
    {62, 2, 31, 33, 60, 133, 91, 381},
    {62, 3, 31, 33, 57, 145, 99, 283},
    {62, 4, 25, 25, 60, 144, 89, 379},
    {62, 5, 28, 32, 42, 134, 60, 212},
    {63, 0, 27, 35, 47, 79, 70, 285},
    {63, 1, 35, 34, 54, 65, 87, 376},
    {63, 2, 29, 35, 55, 79, 65, 290},
    {63, 3, 27, 37, 59, 135, 96, 380},
    {63, 4, 25, 36, 55, 67, 85, 306},
    {63, 5, 31, 37, 42, 54, 78, 228},
    {64, 0, 28, 41, 47, 142, 91, 258},
    {64, 1, 31, 39, 48, 125, 97, 212},
    {64, 2, 31, 41, 46, 69, 67, 291},
    {64, 3, 27, 30, 55, 87, 62, 229},
    {64, 4, 33, 25, 40, 144, 69, 374},
    {64, 5, 33, 44, 47, 108, 99, 262},
    {65, 0, 32, 28, 57, 126, 89, 365},
    {65, 1, 34, 34, 50, 81, 75, 324},
    {65, 2, 34, 36, 43, 130, 50, 398},
    {65, 3, 30, 35, 44, 74, 83, 241},
    {65, 4, 35, 27, 53, 122, 58, 333},
    {65, 5, 30, 45, 60, 146, 92, 240},
    {66, 0, 35, 28, 56, 125, 96, 223},
    {66, 1, 27, 38, 54, 132, 72, 295},
    {66, 2, 30, 35, 41, 64, 68, 283},
    {66, 3, 27, 28, 51, 63, 67, 334},
    {66, 4, 27, 41, 50, 66, 78, 370},
    {66, 5, 26, 35, 59, 133, 100, 266},
    {67, 0, 35, 37, 49, 115, 96, 350},
    {67, 1, 31, 41, 52, 131, 78, 206},
    {67, 2, 30, 42, 49, 118, 59, 277},
    {67, 3, 26, 37, 57, 79, 86, 365},
    {67, 4, 31, 37, 50, 130, 66, 367},
    {67, 5, 25, 39, 41, 137, 68, 285},
    {68, 0, 30, 32, 46, 135, 70, 329},
    {68, 1, 25, 31, 50, 95, 90, 218},
    {68, 2, 32, 28, 51, 143, 89, 356},
    {68, 3, 29, 27, 55, 145, 90, 374},
    {68, 4, 28, 26, 47, 99, 61, 397},
    {68, 5, 34, 42, 40, 119, 82, 245},
    {69, 0, 25, 44, 52, 114, 94, 355},
    {69, 1, 35, 30, 50, 82, 62, 202},
    {69, 2, 34, 36, 59, 112, 76, 351},
    {69, 3, 35, 26, 42, 112, 91, 322},
    {69, 4, 26, 39, 43, 144, 66, 375},
    {69, 5, 34, 35, 57, 92, 81, 215},
    {70, 0, 27, 30, 52, 146, 60, 316},
    {70, 1, 25, 45, 55, 120, 99, 269},
    {70, 2, 33, 34, 50, 102, 79, 234},
    {70, 3, 28, 29, 44, 70, 90, 276},
    {70, 4, 29, 40, 40, 56, 56, 340},
    {70, 5, 31, 45, 40, 107, 69, 284},
    {71, 0, 34, 43, 58, 90, 59, 381},
    {71, 1, 34, 26, 53, 61, 88, 395},
    {71, 2, 32, 37, 47, 72, 59, 313},
    {71, 3, 35, 29, 59, 102, 72, 394},
    {71, 4, 27, 36, 59, 53, 72, 201},
    {71, 5, 34, 28, 42, 64, 70, 287},
    {72, 0, 31, 25, 40, 80, 76, 368},
    {72, 1, 32, 38, 60, 102, 98, 229},
    {72, 2, 32, 39, 49, 113, 74, 369},
    {72, 3, 27, 29, 60, 107, 67, 390},
    {72, 4, 31, 36, 40, 147, 58, 244},
    {72, 5, 32, 36, 59, 130, 72, 214},
    {73, 0, 33, 28, 60, 90, 72, 212},
    {73, 1, 25, 25, 43, 102, 64, 306},
    {73, 2, 30, 34, 42, 129, 71, 282},
    {73, 3, 34, 40, 40, 93, 74, 283},
    {73, 4, 25, 29, 52, 96, 72, 217},
    {73, 5, 29, 33, 49, 55, 61, 237},
    {74, 0, 35, 45, 51, 120, 77, 210},
    {74, 1, 35, 38, 53, 100, 97, 371},
    {74, 2, 26, 30, 44, 147, 97, 206},
    {74, 3, 35, 31, 49, 139, 54, 347},
    {74, 4, 32, 44, 49, 53, 100, 329},
    {74, 5, 30, 34, 57, 144, 56, 221},
    {75, 0, 29, 34, 56, 144, 94, 295},
    {75, 1, 26, 41, 40, 79, 64, 233},
    {75, 2, 27, 43, 40, 54, 75, 365},
    {75, 3, 33, 26, 56, 146, 70, 396},
    {75, 4, 26, 34, 44, 115, 78, 391},
    {75, 5, 33, 30, 56, 112, 56, 377},
    {76, 0, 32, 25, 41, 140, 53, 300},
    {76, 1, 33, 37, 46, 90, 63, 338},
    {76, 2, 33, 44, 48, 150, 77, 371},
    {76, 3, 31, 26, 59, 125, 100, 359},
    {76, 4, 31, 35, 52, 68, 74, 366},
    {76, 5, 32, 27, 51, 80, 83, 319},
    {77, 0, 33, 42, 56, 91, 88, 255},
    {77, 1, 27, 28, 50, 93, 53, 265},
    {77, 2, 28, 30, 57, 138, 82, 337},
    {77, 3, 25, 42, 57, 141, 52, 210},
    {77, 4, 29, 44, 54, 73, 79, 220},
    {77, 5, 34, 44, 48, 134, 69, 322},
    {78, 0, 35, 38, 49, 144, 91, 206},
    {78, 1, 30, 41, 43, 68, 66, 357},
    {78, 2, 31, 31, 44, 104, 56, 340},
    {78, 3, 25, 45, 54, 123, 57, 273},
    {78, 4, 32, 35, 48, 136, 86, 281},
    {78, 5, 28, 32, 41, 150, 76, 300},
    {79, 0, 35, 43, 42, 82, 71, 266},
    {79, 1, 35, 32, 54, 142, 74, 336},
    {79, 2, 33, 33, 59, 86, 95, 357},
    {79, 3, 31, 29, 46, 142, 73, 375},
    {79, 4, 29, 39, 58, 84, 68, 343},
    {79, 5, 30, 26, 50, 93, 84, 369}
    // Add the rest of your data here
};

const int datasetSize = sizeof(sensorData) / sizeof(sensorData[0]);

#include <LiquidCrystal.h>

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

const int waterMotorPin = 8;
const int fertilizerMotorPin = 9;
const int pesticideMotorPin = 10;

const int totalDays = 80;
const int intervalsPerDay = 6;

void setup() {
  pinMode(waterMotorPin, OUTPUT);
  pinMode(fertilizerMotorPin, OUTPUT);
  pinMode(pesticideMotorPin, OUTPUT);
  Serial.begin(9600);
  lcd.begin(16, 2);
}

void loop() {
  for (int day = 0; day < totalDays; day++) {
    for (int interval = 0; interval < intervalsPerDay; interval++) {
      SensorData data;
      if (day < datasetSize) {
        memcpy_P(&data, &sensorData[day * intervalsPerDay + interval], sizeof(SensorData));
      } else {
        // Handle case where the day exceeds the dataset size
        data = {day, interval, 25, 45, 55, 75, 45, 225}; // Default values or repeat last known values
      }

      // Print sensor values to Serial Monitor
      Serial.print("Day ");
      Serial.print(data.day + 1);
      Serial.print(", Interval ");
      Serial.println(data.interval + 1);
      Serial.print("Temperature: ");
      Serial.println(data.temperature);
      Serial.print("Moisture: ");
      Serial.println(data.moisture);
      Serial.print("Humidity: ");
      Serial.println(data.humidity);
      Serial.print("N: ");
      Serial.println(data.n);
      Serial.print("P: ");
      Serial.println(data.p);
      Serial.print("K: ");
      Serial.println(data.k);

      // Display sensor values on LCD
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Temp: ");
      lcd.print(data.temperature);
      lcd.print(" C");
      lcd.setCursor(0, 1);
      lcd.print("Moist: ");
      lcd.print(data.moisture);
      lcd.print(" %");
      delay(5000);

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Humidity: ");
      lcd.print(data.humidity);
      lcd.print(" %");
      lcd.setCursor(0, 1);
      lcd.print("N: ");
      lcd.print(data.n);
      lcd.print(" P: ");
      lcd.print(data.p);
      lcd.print(" K: ");
      lcd.print(data.k);
      delay(5000);

      // Check if adjustments are needed
      if (data.temperature > 35) {
        lcd.clear();
        lcd.print("Adding 500ml water");
        Serial.println("Adding 500ml water as temp above 35");
        digitalWrite(waterMotorPin, HIGH);
        delay(5000);
        digitalWrite(waterMotorPin, LOW);
      }
      if (data.moisture < 26) {
        lcd.clear();
        lcd.print("Adding 300ml water");
        Serial.println("Adding 300ml water as Moisture below 26");
        digitalWrite(waterMotorPin, HIGH);
        delay(3000);
        digitalWrite(waterMotorPin, LOW);
      } else if (data.moisture > 36) {
        lcd.clear();
        lcd.print("Moisture above 36");
        Serial.println("Wait... as Moisture above 36");
      }

      if (data.n < 50 || data.p < 50 || data.k < 200) {
        lcd.clear();
        lcd.print("Adding 50g fertilizer");
        Serial.println("Adding 50g fertilizer as NPK below threshold");
        digitalWrite(fertilizerMotorPin, HIGH);
        delay(5000);
        digitalWrite(fertilizerMotorPin, LOW);
      } else if (data.n > 150 || data.p > 100 || data.k > 400) {
        lcd.clear();
        lcd.print("Wait... NPK above");
        Serial.println("Wait... NPK above threshold");
      }

      if (data.humidity > 70) {
        lcd.clear();
        lcd.print("Applying 20ml pesticide");
        Serial.println("Applying 20ml pesticide due to high humidity");
        digitalWrite(pesticideMotorPin, HIGH);
        delay(2000);
        digitalWrite(pesticideMotorPin, LOW);
      }

      // Delay between intervals (4 hours)
      delay(1000); // Simulated delay for demonstration (1 second = 4 hours)
    }
  }
}
